<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>calculator</groupId>
    <artifactId>calculator-cucumber</artifactId>
    <version>0.5.0</version>
    <packaging>pom</packaging>
    <name>Calculator with JUnit5 and Cucumber tests</name>

    <modules>
        <module>core</module>
        <module>coverage-module</module>
    </modules>

    <properties>
        <project.encoding>UTF-8</project.encoding>
        <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>

        <slf4j.version>2.0.6</slf4j.version>
        <logback.version>1.4.5</logback.version>
        <java.version>23</java.version>
        <junit-jupiter.version>5.11.4</junit-jupiter.version>
        <junit-platform-suite.version>1.11.4</junit-platform-suite.version>
        <cucumber.version>7.21.1</cucumber.version>
        <jacoco.version>0.8.12</jacoco.version>
        <javadoc.version>3.11.2</javadoc.version>
        <sonar.organization>tommens</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <maven.surefire.version>3.5.2</maven.surefire.version>

        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.version>3.14.0</maven.compiler.version>
        <!-- As of JDK 23, annotation processing is only run with some explicit configuration
             of annotation processing or with an explicit request to run annotation processing
             on the javac command line. This is a change in behavior from the existing default
             of looking to run annotation processing by searching the class path for processors
             without any explicit annotation processing related options needing to be present.
             In order to be enable this in Mavan, we need to turn on full compilation processing: -->
        <maven.compiler.proc>full</maven.compiler.proc>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-suite</artifactId>
                <version>${junit-platform-suite.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.cucumber</groupId>
                <artifactId>cucumber-junit-platform-engine</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>calculator/Main.class</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <properties>
                        <configurationParameters>
                            cucumber.junit-platform.naming-strategy=long
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadoc.version}</version>
                <configuration>
                    <detectJavaApiLink>false</detectJavaApiLink>
                </configuration>
                <executions>
                    <execution>
                        <id>javadoc-html</id>
                        <phase>package</phase>
                        <goals>
                            <goal>javadoc</goal>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
